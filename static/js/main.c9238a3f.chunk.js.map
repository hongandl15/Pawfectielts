{"version":3,"sources":["reportWebVitals.js","components/Layout/Helmet.jsx","components/Home/Banner.jsx","components/Catalogue.jsx","components/Test/ListTestCard.jsx","pages/Home.jsx","components/Test/TestDetail.jsx","pages/TestPage.jsx","components/Test/TestSubmit.jsx","components/Test/AudioPlayer.jsx","components/Test/Test.jsx","components/Utils/ModalWindow.jsx","components/ButtonShow.jsx","components/Utils/AlertScore.jsx","components/Answer.jsx","components/Utils/ChooseSection.jsx","pages/ExamPage.jsx","components/Authentication/LoginForm.jsx","pages/LoginPage.jsx","components/Authentication/RegistrationForm.jsx","pages/RegisterPage.jsx","components/Utils/ParagraphComponent.jsx","components/Test/TestResult.jsx","pages/Result.jsx","components/Utils/Alert.jsx","components/Layout/ChangePasswordForm.jsx","components/Utils/TestResultCard.jsx","components/Profile.jsx","pages/ProfilePage.jsx","components/Admin/AddSet.jsx","components/Admin/ListAllSet.jsx","pages/AdminDashboard.jsx","components/Admin/AddTestCard.jsx","components/Admin/SetDetail.jsx","pages/AdminSetDetail.jsx","components/Admin/CKEditorComponent.jsx","components/Admin/AddQuestion.jsx","components/Admin/InputQuestion.jsx","components/Admin/FileInputComponent.jsx","components/Admin/TestEditor.jsx","components/Admin/AddTest.jsx","pages/AdminEditPage.jsx","components/Test/TestAnswer.jsx","pages/TestAnswerPage.jsx","routes/Routes.jsx","components/Layout/LoginPopup.jsx","components/Layout/LogoutPopup.jsx","components/Utils/ScrollToTop.jsx","components/Layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Helmet","props","document","title","getElementsByTagName","content","children","Banner","className","Button","variant","btn_content1","color","btn_content2","src","imageLink","alt","Catalogue","CatalogueList","CatalogueCard","ListTestCard","API_URL","setid","useState","testData","setData","urlSet","listTest","setListTest","useEffect","fetchData","fetch","response","json","jsonData","length","set","name","console","log","error","map","card","index","id","TestCard","testcardclass","skill","to","pathname","state","stateParam","Home","LoginStatus","setLoginStatus","window","scrollTo","sessionStorage","getItem","TestInfo","test","testname","testskill","Window2","testid","TestDetail","selectedWindow","setSelectedWindow","handleWindowClick","windowName","onClick","TestPage","useLocation","TestSubmit","isSubmitting","setIsSubmitting","history","useHistory","handleConfirmSubmit","isConfirmed","confirm","userId","JSON","parse","method","headers","body","ok","Error","data","testResultId","removeItem","push","disabled","CountdownTimer","minutes","setMinutes","seconds","setSeconds","interval","setInterval","clearInterval","alert","AudioPlayer","autoPlay","controls","Test","passage","catch","dangerouslySetInnerHTML","__html","ModalWindow","show","placeholder","ButtonShow","showModal","setShowModal","onClose","AlertScore","type","message","role","AnswerWriting","HTMLToString","html","tempElement","createElement","innerHTML","textContent","innerText","Array","fill","answers","setAnswers","showComponent","setShowComponent","listpart","item","replace","savedAnswers","partcontent","submitContent","stringify","answer","topic","value","partorder","onChange","e","updatedAnswers","setItem","handleAnswerChange","target","AnswerSpeaking","useSpeechRecognition","transcript","listening","browserSupportsSpeechRecognition","resetTranscript","handleTranscriptChange","savedTranscripts","SpeechRecognition","startListening","continuous","language","stopListening","currentTranscript","deleteTranscript","Answer","partid","questionDetails","itemc","order","child","updatedAnswersObject","itemcc","ChooseSection","setListPart","part","Fragment","ExamPageListening","ExamPageWriting","ExamPageSpeaking","ExamPageReading","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","preventDefault","userID","phone","onSubmit","htmlFor","LoginPage","RegistrationForm","email","user","setUser","axios","post","status","statusText","handleChange","prevUser","_lpchecked","RegisterPage","ParagraphComponent","paragraph","split","line","TestResult","score","setScore","class","rightAnswer","wrongAnswer","skipAnswer","userAnswers","orderNumber","correctAnswer","correct","TestResultPassage","listScore","individualScore","scoreTaskResponse","scoreCoherence","scoreLexical","scoreGrammar","overallScore","Result","ResultPassage","Alert","ChangePasswordForm","setAlert","timer","setTimeout","clearTimeout","currentPassword","newPassword","requestPassword","setRequestPassword","userid","put","required","TestResultCard","testName","create_at","Profile","setEmail","showForm","setShowForm","resultData","setResultData","version","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","slice","result","ProfilePage","AddSet","onSetAdded","setName","setSetName","event","ListAllSet","setList","setSetList","AdminDashboard","LoginStatusAdmin","setLoginStatusAdmin","AddTestCard","setSkill","getSkill","skillid","TestCardAdmin","deleteTest","hideTestCardAdmin","SetDetail","showTestCardAdmin","setShowTestCardAdmin","desiredId","some","AdminSetDetail","CKEditorComponent","editorValue","onHtmlChange","editorData","setEditorData","editor","ClassicEditor","getData","AddQuestion","listquestion","inputTags","setInputTags","inputTagsAnswer","setInputTagsAnswer","outputTags","setOutputTags","tag","updatedInputTags","updatedOutputTags","idx","handleInputChange","updatedInputTagsAnswer","handleInputAnswerChange","filter","i","splice","handleRemoveInput","InputQuestion","listoutput","listTopic","setListTopic","listQuestions","setListQuestions","newEditorValue","updatedTopicList","handleEditorSelectChange","listq","updatedListQuestions","handleListQuestionSelectChange","FileInputComponent","selectedFile","setSelectedFile","file","files","size","TestEditor","output","setlistQuestions","partContent","setPartContent","setAudioFile","listQuestion","setTest","saveOutput","newTest","updatedPartContent","audioFile","AddTest","onInputChange","inputValue","setInputValue","newValue","AdminEditPageReading","setTestName","TestQ","updatedListTest","getListTest","TestAnswer","setAnswer","TestAnswerPage","Routes","path","exact","component","LoginPopup","onLogin","handleLogin","LogoutPopup","onLogout","handleLogout","withRouter","unlisten","listen","Layout","render","Header","showLoginPopup","setShowLoginPopup","showLogoutPopup","setShowLogoutPopup","Footer","href","height","icon","faBacteria","FooterWrapper","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9238a3f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Helmet = props => {\n\n    document.title = props.title\n    document.getElementsByTagName(\"META\")[2].content=\"Your description about the page or site here to set dynamically\";\n\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nHelmet.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Helmet\n","import React from 'react'\r\nimport {Button} from '@mui/material'\r\n\r\nconst Banner = (props) => {\r\n\r\n    return (\r\n        <div className='main-banner'>\r\n            <div className='main-banner_title'>\r\n                <h1>{props.title}</h1>\r\n                <div className='main-banner_btn'>\r\n                <Button variant=\"contained\" >\r\n                    {props.btn_content1}\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"success\">\r\n                    {props.btn_content2}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n            <div className='main-banner_img'>\r\n                <img src={props.imageLink} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Catalogue = (props) => {\r\n\r\n    return (\r\n        <div className='catalogue'>\r\n            <CatalogueList></CatalogueList>\r\n            <div className='catalogue_child'>\r\n                <div className='catalogue-title'>\r\n                    <h1>Không cần nỗi lo chi phí học IELTS</h1>\r\n                    <div className='catalogue-title_btn'>\r\n                        Trải nghiệm ngay\r\n                    </div>\r\n                </div>\r\n                <img src=\"./banner-8.png\" alt=\"\" />\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Catalogue\r\n\r\nexport const CatalogueList = (props) => {\r\n\r\n    return (\r\n        <div className='catalogue_list'>\r\n            <CatalogueCard imageLink=\"../study-1.jpg\" title='Làm đề thi'></CatalogueCard >\r\n            <CatalogueCard imageLink=\"../study-2.jpg\" title='Tìm kiếm tài liệu'></CatalogueCard >\r\n            <CatalogueCard imageLink=\"../study-3.jpg\" title='Chấm điểm writing tự động'></CatalogueCard >\r\n            <CatalogueCard imageLink=\"../study-4.jpg\" title='Thống kê kết quả luyện thi'></CatalogueCard >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const CatalogueCard = (props) => {\r\n    return (\r\n        <div className='catalogue_card'>\r\n            <img src={props.imageLink} alt=\"\" />\r\n            <div className='catalogue_card_title'>{props.title}</div>\r\n            <div className='catalogue_card_decobar'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {Button} from '@mui/material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListTestCard = (props) => {\r\n    const API_URL = 'https://pawfectielts.onrender.com/test/getbyset/' + props.setid;\r\n      const [testData, setData] = useState([]);\r\n      const [urlSet, setUrl] = useState(API_URL);\r\n      const [listTest, setListTest] = useState('')\r\n  \r\n      useEffect(() => {\r\n          fetchData();\r\n      }, []);  // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n      const fetchData = async () => {\r\n          try {\r\n            const response = await fetch(urlSet); // Replace with your API endpoint\r\n            const jsonData = await response.json();\r\n            setData(jsonData);\r\n            if (jsonData.length > 0) {\r\n              setListTest(jsonData[0].set.name);\r\n              console.log(listTest);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n        };\r\n  \r\n    return (\r\n      <div className='todolist'>\r\n        <h1>{listTest}</h1>\r\n        <ol>\r\n          {testData.map((card, index) => (\r\n            <TestCard key={card.id} card={card} ></TestCard>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  };\r\nexport default ListTestCard\r\n\r\n\r\nexport const TestCard = (props) => {\r\n    const testcardclass = 'TestCard' + ' test-'+ props.card.skill.name\r\n    return (\r\n        <Link \r\n            to={{\r\n                pathname: \"/test\",\r\n                state: {stateParam: props.card}\r\n            }}\r\n        className=\"LinkWithoutUnderline\">\r\n        {/* <div className='TestCard test-reading'>   */}\r\n        <li className={testcardclass}>\r\n            {/* style={{ '--accent-color': \"#0D6EFD\" }}> */}\r\n            <div className=\"icon\"><i className={\"fa-brands fa-codepen\"}></i></div>\r\n            <div className=\"title\">Kỹ năng {props.card.skill.name}</div>\r\n            <div className=\"descr\">\r\n                Bài test {props.card.name}\r\n                <div>Làm ngay</div>         \r\n            </div>\r\n        </li>\r\n        </Link> \r\n    )\r\n}\r\n\r\n\r\n","import Helmet from '../components/Layout/Helmet'\n\nimport React, { useEffect, useState } from \"react\";\n// import TestCard from '../components/TestCard';\nimport Banner from '../components/Home/Banner';\nimport Catalogue from '../components/Catalogue';\nimport ListTestCard from '../components/Test/ListTestCard';\n\nconst Home = () => {\n    const [LoginStatus, setLoginStatus] = useState(false);\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        const user = sessionStorage.getItem('user')\n        if(user){\n            setLoginStatus(true)\n        }\n    }, [sessionStorage.getItem('user')]);\n\n    const renderContent = () => {\n        if (LoginStatus) {\n            return (\n                <>\n                    <Banner imageLink=\"./banner-6.png\" title=\"Thi thử IELTS miễn phí 2023\" btn_content1=\"Thi thử ngay\" btn_content2=\"Tìm hiểu thêm\" />\n                    <Catalogue imageLink=\"./banner-6.png\" />\n                    <ListTestCard setid={1} />\n                    <ListTestCard setid={2} />\n                    <ListTestCard setid={1} />\n\n                </>\n            );\n        } else {\n            return (\n            <div className='p-5'>\n                <h1 className='need-login'>Bạn cần phải đăng nhập để sử dụng trang web</h1>;\n            </div>\n            )\n        }\n    };\n\n    return <Helmet title=\"Trang chủ\">{renderContent()}</Helmet>;\n}\n\nexport default Home\n","import React, { useState } from 'react';\r\nimport {Button} from '@mui/material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TestDetail = (props) => {\r\n  const [selectedWindow, setSelectedWindow] = useState('window1');\r\n\r\n  const handleWindowClick = (windowName) => {\r\n    setSelectedWindow(windowName);\r\n  };\r\n\r\n  return (\r\n    <div className='TestDetail'>\r\n      <h1>{props.test.name}</h1>\r\n      <div className='TestDetail_option'>\r\n        <button onClick={() => handleWindowClick('window1')}>Thông tin đề thi</button>\r\n        <button onClick={() => handleWindowClick('window2')}>Đáp án/transcript</button>\r\n      </div>\r\n\r\n      {/* Conditional rendering based on selected option */}\r\n      {selectedWindow === 'window1' && <TestInfo test={props.test} />}\r\n      {selectedWindow === 'window2' && <Window2 test={props.test}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Replace Window1, Window2, and Window3 with your own components for the specific content you want to display in each window.\r\n\r\n\r\nconst TestInfo = (props) => {\r\n\r\n  return (\r\n    <div className='TestInfo'>\r\n      <div>\r\n        <h3>Bộ đề thi: {props.test.set.name}</h3>\r\n          <p>Kỹ năng: {props.test.skill.name}</p>\r\n        <p className='notice'>Chú ý: Kỹ năng writing và speaking sẽ được AI chấm điểm tự động</p>\r\n      </div>\r\n\r\n      <div>\r\n        {/* <h3>Chọn phần thi bạn muốn làm hoặc</h3> */}\r\n        <Link to={{\r\n              pathname: \"/exam/\" + props.test.skill.name +'/' + props.test.id,\r\n              state: {id: props.test.id, testname: props.test.name, testskill: props.test.skill.name}\r\n          }}>\r\n          <Button variant=\"contained\">\r\n              Làm bài\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n\r\n        {/* <FormGroup>\r\n            <FormControlLabel control={<Checkbox defaultChecked />} label=\"Passage 1\" />\r\n            <FormControlLabel control={<Checkbox />} label=\"Passage 2\" />\r\n            <FormControlLabel control={<Checkbox />} label=\"Passage 3\" />\r\n        </FormGroup>\r\n        <Button variant=\"contained\">\r\n            Làm bài\r\n        </Button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Window2 = (props) => {\r\n  return  (\r\n  <Link to={{\r\n      pathname: \"/answer/\"+ props.test.id,\r\n      state: {testid: props.test.id}\r\n    }}>\r\n    <Button variant=\"contained\">\r\n        Xem đáp án\r\n    </Button>\r\n  </Link>\r\n)};\r\n\r\n\r\nexport default TestDetail;","import Helmet from '../components/Layout/Helmet'\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport TestDetail from '../components/Test/TestDetail';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { ClassNames } from '@emotion/react';\r\n\r\n\r\nconst TestPage = (props) => {\r\n    const test = useLocation().state.stateParam;\r\n    \r\n    return (\r\n        \r\n        <Helmet title=\"Trang chủ\">\r\n            < div className='pt-5'>\r\n            <TestDetail test = {test}></TestDetail>\r\n            {/* <TestInfo></TestInfo> */}\r\n            </div>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\nexport default TestPage\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material'\r\n// import { useHistory } from 'react-router-dom'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst TestSubmit = (props) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleConfirmSubmit = async () => {\r\n  const isConfirmed = window.confirm(\"Bạn có chắc chắn muốn nộp bài?\");\r\n  const userId = JSON.parse(sessionStorage.getItem('user')).id\r\n    if (isConfirmed) {\r\n      setIsSubmitting(true);\r\n\r\n      try {\r\n        const response = await fetch('https://pawfectielts.onrender.com/result/checkResult/' + props.testid + \"?userId=\" + userId, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: sessionStorage.getItem('ieltsAnswersSubmit'),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        const testResultId = data.id;\r\n\r\n        console.log(testResultId); // Output the testResultId for debugging\r\n\r\n        sessionStorage.removeItem('ieltsAnswers');\r\n        sessionStorage.removeItem('ieltsAnswersSubmit');\r\n\r\n        history.push({\r\n          pathname: \"/exam/result/\" + testResultId,\r\n          state: {\r\n            id: props.testid,\r\n            testResultId: testResultId\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='TestSubmit'>\r\n      <div className='TestSubmit_time'>\r\n        <p>Thời gian làm bài:</p>\r\n        <CountdownTimer />\r\n        <Button variant=\"contained\" onClick={handleConfirmSubmit} disabled={isSubmitting}>\r\n          Nộp bài\r\n        </Button>\r\n      </div>\r\n      <p className='TestSubmit_notice'>\r\n        Chú ý: bạn có thể click vào số thứ tự câu hỏi trong bài để đánh dấu review\r\n      </p>\r\n      {/* <NumberList /> */}\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default TestSubmit\r\n\r\n\r\n\r\nexport const NumberList = () => {\r\n  const [selectedNumber, setSelectedNumber] = useState();\r\n\r\n  const handleNumberClick = (number) => {\r\n    setSelectedNumber(number);\r\n  };\r\n\r\n  const renderNumbers = () => {\r\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n\r\n    return numbers.map((number) => (\r\n      <li\r\n        key={number}\r\n        className={selectedNumber === number ? 'number-item active' : 'number-item'}\r\n        onClick={() => handleNumberClick(number)}\r\n      >\r\n        {number}\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>Passage</h3>\r\n        <ul className=\"number-list\">\r\n          {renderNumbers()}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Passage</h3>\r\n        <ul className=\"number-list\">\r\n          {renderNumbers()}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Passage</h3>\r\n        <ul className=\"number-list\">\r\n          {renderNumbers()}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport const CountdownTimer = () => {\r\n  const [minutes, setMinutes] = useState(60);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      } else {\r\n        if (minutes === 0) {\r\n          clearInterval(interval);\r\n          // Timer has reached 0 minutes and 0 seconds\r\n          alert(\"Time's up!\"); // Display alert message\r\n        } else {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [minutes, seconds]);\r\n\r\n  return (\r\n    <h3>{`${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`}</h3>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react'\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nconst AudioPlayer = (props) => {\r\n\r\n    return (\r\n        <ReactAudioPlayer\r\n            src=\"https://study4.com/media/c18/section1-part1.mp3\"\r\n            autoPlay\r\n            controls\r\n            className=\"ReactAudioPlayer m-auto mt-5\">\r\n        </ReactAudioPlayer>\r\n    )\r\n}\r\n\r\nexport default AudioPlayer\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const Test = (props) => {\r\n\r\n    const API_URL = 'https://pawfectielts.onrender.com/part/get/' + props.testid ;\r\n    const [testData, setData] = useState([]);\r\n    const [urlSet, setUrl] = useState(API_URL);\r\n\r\n    useEffect(async () => {\r\n         await fetch(urlSet, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setData(data[props.passage-1].content);\r\n            console.log(data);\r\n        })\r\n        .catch(error => {\r\n            console.error('Fetch error:', error);\r\n        });\r\n    }, [urlSet]);  // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n\r\n    return (\r\n        <>\r\n        {testData != null &&\r\n            <div className='Topic'>  \r\n                <div dangerouslySetInnerHTML={{ __html: testData }} />\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test;\r\n\r\n","// src/ModalWindow.js\r\nimport React from 'react';\r\n\r\nconst ModalWindow = ({ show }) => {\r\n    if (!show) return show;\r\n  \r\n  return (\r\n    <div className={`note ${show ? 'show' : ''}`}>\r\n         <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"Viết dàn ý cho bài\"\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;","import React, { useState } from 'react';\r\nimport ModalWindow from './Utils/ModalWindow';\r\n\r\nconst ButtonShow = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='button_show' onClick={handleButtonClick}>Thêm ghi chú/ Dàn ý</button>\r\n      <ModalWindow show={showModal}  onClose={handleCloseModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonShow;","import React from 'react';\r\n\r\nconst AlertScore = ({ type, message }) => {\r\n  return (\r\n    <div className={`alert-score`} role=\"alert\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertScore;","import React, { useEffect, useState } from 'react'\r\nimport ButtonShow from './ButtonShow'\r\nimport { Button } from '@mui/material'\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CountdownTimer } from './Test/TestSubmit';\r\nimport AlertScore from './Utils/AlertScore';\r\n\r\nconst Answer = (props) => {\r\n\r\n  const API_URL = 'https://pawfectielts.onrender.com/question/get/' + props.partid;\r\n  const [testData, setData] = useState([]);\r\n  const [urlSet, setUrl] = useState(API_URL);\r\n  const [answers, setAnswers] = useState(Array(40).fill(''));\r\n\r\n  useEffect(() => {\r\n    fetch(urlSet)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setData(data);\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Fetch error:', error);\r\n      });\r\n  }, [urlSet]);  // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n\r\n  // Load saved input from session when component mounts\r\n  useEffect(() => {\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem('ieltsAnswers'));\r\n    if (savedAnswers) {\r\n      setAnswers(savedAnswers);\r\n    }\r\n  }, []);\r\n\r\n  const handleAnswerChange = (index, value) => {\r\n    const updatedAnswers = [...answers];\r\n    updatedAnswers[index] = value;\r\n    setAnswers(updatedAnswers);\r\n    const updatedAnswersObject = { answer: updatedAnswers };\r\n    sessionStorage.setItem('ieltsAnswers', JSON.stringify(updatedAnswers));\r\n    sessionStorage.setItem('ieltsAnswersSubmit', JSON.stringify(updatedAnswersObject));\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='Answer'>\r\n      {testData.map(item => (\r\n        <div key={`html-${item.id}`}>\r\n          <div dangerouslySetInnerHTML={{ __html: item.title }} />\r\n          {item.questionDetails.map(itemc => (\r\n            <div key={itemc.id}>\r\n              <div className='question_number'>{itemc.order}</div> {itemc.name}\r\n              {itemc.child.length === 0 ? (\r\n                <div key={`input-${itemc.id}`}>\r\n                  <input type=\"text\"\r\n                    value={answers[itemc.order - 1]}\r\n                    onChange={(e) => handleAnswerChange(itemc.order - 1, e.target.value)} />\r\n                </div>\r\n              ) : (\r\n                <div className=''>\r\n                  {itemc.child.map(itemcc => (\r\n                    <div key={`radio-${itemcc.id}`}>\r\n                      <input type=\"radio\" value={itemcc.content} name='answerChild' />\r\n                      <label>{itemcc.content}</label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )\r\n              }\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport const AnswerWriting = (props) => {\r\n\r\n  const HTMLToString = ( html ) => {\r\n    const tempElement = document.createElement('div');\r\n    tempElement.innerHTML = html;\r\n    return tempElement.textContent || tempElement.innerText;;\r\n  };\r\n\r\n  const [answers, setAnswers] = useState(Array(2).fill(''));\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showComponent, setShowComponent] = useState(false);\r\n  const [listpart, setListPart] = useState(props.listpart.map(item => HTMLToString(item.content).replace(/\\n/g, ' ')));\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem('ieltsAnswersWriting'));\r\n    if (savedAnswers) {\r\n      setAnswers(savedAnswers);\r\n    }\r\n  }, []);\r\n\r\n  const handleAnswerChange = (index, value) => {\r\n    const updatedAnswers = [...answers];\r\n    updatedAnswers[index] = value;\r\n    setAnswers(updatedAnswers);\r\n    sessionStorage.setItem('ieltsAnswersWriting', JSON.stringify(updatedAnswers));\r\n  }\r\n\r\n\r\n  console.log(HTMLToString(props.partcontent))\r\n\r\n  const userId = JSON.parse(sessionStorage.getItem('user')).id\r\n  const handleConfirmSubmit = async () => {\r\n    const isConfirmed = window.confirm(\"Bạn có chắc chắn muốn nộp bài?\");\r\n  \r\n    if (isConfirmed) {\r\n      setIsSubmitting(true);\r\n      setShowComponent(true); // show the component\r\n      const savedAnswers = JSON.parse(sessionStorage.getItem('ieltsAnswersWriting'))\r\n      const submitContent = JSON.stringify({ answer: savedAnswers, topic: listpart })\r\n      try {\r\n\r\n        const response = await fetch('https://pawfectielts.onrender.com/result/getpassagescore/'+ props.testid +'?userId='+ userId, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: submitContent,\r\n        });\r\n\r\n        const data = await response.json();\r\n        const testResultId = data.id;\r\n\r\n\r\n        history.push({\r\n          pathname: \"/exam/resultpassage/\" + testResultId,\r\n          state: {\r\n            id: props.testid,\r\n            testResultId: testResultId\r\n          }\r\n        });\r\n  \r\n        console.log(testResultId); // Output the testResultId for debugging\r\n  \r\n        sessionStorage.removeItem('ieltsAnswersWriting');\r\n        sessionStorage.removeItem('ieltsAnswersWritingSubmit');\r\n  \r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n\r\n\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n        {showComponent && (\r\n        <AlertScore message={\"Hệ thống đang chấm điểm, bạn vui lòng đợi chốc lát...\"} />\r\n        )}\r\n      <div className='Answer_writing' id='Answer_writing'>\r\n        {/* ...your form content... */}\r\n        <ButtonShow></ButtonShow>\r\n        <textarea name=\"writing\"\r\n        value={answers[props.partorder-1]} \r\n        onChange={(e) => handleAnswerChange(props.partorder-1, e.target.value)} placeholder='Viết essay tại đây'></textarea>\r\n      </div>\r\n      {/* ...your other components and content... */}\r\n      <div className='TestSubmit'>\r\n        <div className='TestSubmit_time'>\r\n          <p>Thời gian làm bài:</p>\r\n        <CountdownTimer />\r\n        <Button variant=\"contained\" onClick={handleConfirmSubmit} disabled={isSubmitting}>\r\n          Nộp bài\r\n        </Button>\r\n        </div>\r\n        <p className='TestSubmit_notice'>\r\n          Chú ý: bạn có thể click vào số thứ tự câu hỏi trong bài để đánh dấu review\r\n        </p>\r\n        {/* <NumberList /> */}\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport const AnswerSpeaking = (props) => {\r\n  const HTMLToString = ( html ) => {\r\n    const tempElement = document.createElement('div');\r\n    tempElement.innerHTML = html;\r\n    return tempElement.textContent || tempElement.innerText;;\r\n  };\r\n  \r\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\r\n  const [listpart, setListPart] = useState(props.listpart.map(item => HTMLToString(item.content).replace(/\\n/g, ' ')));\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [showComponent, setShowComponent] = useState(false);\r\n  const history = useHistory();\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n  // \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem('ieltsTranscripts'));\r\n    if (savedAnswers) {\r\n      setAnswers(savedAnswers);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleTranscriptChange(props.partorder-1, transcript);\r\n    console.log(listpart)\r\n  }, [transcript, props.partorder, listpart]);\r\n\r\n\r\n  const deleteTranscript = (index) => {\r\n    const currentTranscript = JSON.parse(sessionStorage.getItem('ieltsTranscripts'));\r\n    currentTranscript[index] = '';\r\n    sessionStorage.setItem('ieltsTranscripts', JSON.stringify(currentTranscript));\r\n    setAnswers(currentTranscript)\r\n}\r\n\r\n  const handleTranscriptChange = (index, value) => {\r\n    if (!sessionStorage.getItem('ieltsTranscripts')){\r\n      sessionStorage.setItem('ieltsTranscripts', JSON.stringify(['','','']));\r\n    }\r\n    const savedTranscripts = JSON.parse(sessionStorage.getItem('ieltsTranscripts')) || [\"\", \"\", \"\"];\r\n    if (value){\r\n      savedTranscripts[index] = value;\r\n      sessionStorage.setItem('ieltsTranscripts', JSON.stringify(savedTranscripts));\r\n      setAnswers(savedTranscripts)\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const userId = JSON.parse(sessionStorage.getItem('user')).id\r\n\r\n  const handleConfirmSubmit = async () => {\r\n    const isConfirmed = window.confirm(\"Bạn có chắc chắn muốn nộp bài?\");\r\n    if (isConfirmed) {\r\n      setIsSubmitting(true);\r\n      setShowComponent(true); // show the component\r\n      const savedTranscripts = JSON.parse(sessionStorage.getItem('ieltsTranscripts'))\r\n      const submitContent = JSON.stringify({ answer: savedTranscripts, topic: listpart })\r\n      const response = await fetch('https://pawfectielts.onrender.com/result/getpassagescore/'+ props.testid +'?userId='+ userId, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: submitContent,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          window.alert(\"Có lỗi xảy ra, vui lòng thử lại sau 1 phút\")\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        const testResultId = data.id;\r\n\r\n        console.log(testResultId); // Output the testResultId for debugging\r\n        sessionStorage.removeItem('ieltsTranscripts');\r\n\r\n        history.push({\r\n          pathname: \"/exam/resultpassage/\" + testResultId,\r\n          state: {\r\n            id: props.testid,\r\n            testResultId: testResultId\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n\r\n\r\n  const listenContinuously = () => {\r\n    SpeechRecognition.startListening({\r\n      continuous: true,\r\n      language: 'en-GB',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showComponent && (\r\n      <AlertScore message={\"Hệ thống đang chấm điểm, bạn vui lòng đợi chốc lát...\"} />\r\n      )}\r\n    <div className='Answer_writing'>\r\n      <p>Microphone: {listening ? 'on' : 'off'}</p>\r\n      <p className='text-danger'>Lưu ý: Không chuyển part khi text chưa hiện hết</p>\r\n      <Button variant=\"contained\" color=\"success\" onClick={listenContinuously}>Start</Button>\r\n      <Button variant=\"contained\" color=\"error\" onClick={SpeechRecognition.stopListening}>Stop</Button>\r\n      <Button variant=\"contained\" onClick={(e) => deleteTranscript(props.partorder-1)}>Reset</Button>\r\n      <ButtonShow></ButtonShow>\r\n      {/* <div>{transcript}</div> */}\r\n      <textarea      \r\n        value={answers[props.partorder-1]} \r\n        onChange={(e) => handleTranscriptChange(props.partorder-1, e.target.value)}\r\n        disabled\r\n      ></textarea>\r\n    </div>\r\n    <div className='TestSubmit'>\r\n        <div className='TestSubmit_time'>\r\n          <p>Thời gian làm bài:</p>\r\n        <CountdownTimer />\r\n        <Button variant=\"contained\" onClick={handleConfirmSubmit} disabled={isSubmitting}>\r\n          Nộp bài\r\n        </Button>\r\n        </div>\r\n        <p className='TestSubmit_notice'>\r\n          Chú ý: bạn có thể click vào số thứ tự câu hỏi trong bài để đánh dấu review\r\n        </p>\r\n        {/* <NumberList /> */}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Answer\r\n\r\n\r\n","import React, {useEffect, useState } from 'react';\r\nimport {Button} from '@mui/material'\r\nimport Test from '../Test/Test'; \r\nimport Answer, { AnswerSpeaking } from '../Answer';\r\nimport { AnswerWriting } from '../Answer';\r\n\r\nconst ChooseSection = (props) => {\r\n\r\n  const [listpart, setListPart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://pawfectielts.onrender.com/part/get/'+ props.testid)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setListPart(data);\r\n        setSelectedWindow(data[0].id)\r\n        console.log(\"list part\" + data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Fetch error:', error);\r\n      });\r\n  }, []);  // Include \r\n\r\n  const [selectedWindow, setSelectedWindow] = useState();\r\n  const handleWindowClick = (windowName) => {\r\n    setSelectedWindow(windowName);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='TestDetail'>    \r\n        <h1>{props.testname}</h1>\r\n        <div className='TestDetail_option'>\r\n\r\n        {listpart && listpart.map((part) => (\r\n          <React.Fragment key={`part-${part.id}`}>\r\n          {props.testskill == 'reading' &&\r\n            <button key={\"partreading\" + part.id} onClick={() => handleWindowClick(part.id)}>\r\n                Passage {part.order}\r\n            </button>\r\n          }\r\n\r\n          {props.testskill == 'listening' &&\r\n            <button key={\"partlistening\" + part.id} onClick={() => handleWindowClick(part.id)}>\r\n                Recording {part.order}\r\n            </button>\r\n          }\r\n\r\n          {props.testskill == 'writing' &&\r\n            <button key={\"partwriting\" + part.id} onClick={() => handleWindowClick(part.id)}>\r\n                Task {part.order}\r\n            </button>\r\n          }\r\n\r\n          {props.testskill == 'speaking' &&\r\n            <button key={\"partspeaking\" + part.id} onClick={() => handleWindowClick(part.id)}>\r\n                Part {part.order}\r\n            </button>\r\n          }\r\n          \r\n          </React.Fragment>\r\n        ))}\r\n\r\n          {/* <button onClick={() => handleWindowClick(2)}>Passage 2</button>\r\n          <button onClick={() => handleWindowClick(3)}>Passage 3</button>  */}\r\n        </div>\r\n          <Button variant=\"contained\">\r\n              Thoát\r\n          </Button>\r\n      </div>\r\n      {listpart && listpart.map((part) => (\r\n        selectedWindow == part.id  && \r\n        <>\r\n          <Test key={\"test\" + selectedWindow} testid = {props.testid} passage={part.order} /> \r\n          {props.testskill == 'reading' &&\r\n            <Answer key={\"answer\" + selectedWindow}  partid={selectedWindow} testid = {props.testid}  partorder ={part.order} />\r\n          }\r\n\r\n          {props.testskill == 'listening' &&\r\n            <Answer key={\"answer\" + selectedWindow}  partid={selectedWindow} testid = {props.testid} partorder ={part.order}/>\r\n          }\r\n\r\n          {props.testskill == 'writing' &&\r\n            <AnswerWriting key={\"answerwriting\" + selectedWindow} listpart = {listpart} partcontent={part.content} partid={selectedWindow} testid = {props.testid} partorder ={part.order}/>\r\n          }\r\n\r\n          {props.testskill == 'speaking' &&\r\n            <AnswerSpeaking key={\"answerspeaking\" + selectedWindow}  listpart = {listpart} partcontent={part.content} partid={selectedWindow} testid = {props.testid} partorder ={part.order}/>\r\n          }\r\n\r\n        </>\r\n        ))}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChooseSection;\r\n\r\n\r\n\r\n","import Helmet from '../components/Layout/Helmet'\r\nimport React from \"react\";\r\n// import Highlighter from '../components/Highlighter';\r\nimport TestSubmit from '../components/Test/TestSubmit';\r\nimport AudioPlayer from '../components/Test/AudioPlayer';\r\nimport ChooseSection, { ChooseSectionListening, ChooseSectionSpeaking, ChooseSectionWriting } from '../components/Utils/ChooseSection';\r\nimport { useLocation } from 'react-router-dom'\r\n// import { Link } from 'react-router-dom'\r\n\r\nconst ExamPageReading = (props) => {\r\n  \r\n  const testid = useLocation().state.id;\r\n  const testname = useLocation().state.testname\r\n  const testskill = useLocation().state.testskill\r\n  \r\n    return (\r\n        <Helmet title=\"Trang chủ\">\r\n                <div className='ExamPage'>\r\n                    <ChooseSection testid = {testid} testname={testname} testskill ={testskill}></ChooseSection>\r\n                    <TestSubmit testid = {testid} ></TestSubmit>\r\n                </div>\r\n        </Helmet>\r\n    );\r\n  };\r\n\r\nexport const ExamPageListening = () => {\r\n\r\n    const testid = useLocation().state.id;\r\n    const testname = useLocation().state.testname\r\n    const testskill = useLocation().state.testskill\r\n  return (\r\n      <Helmet title=\"Trang chủ\">\r\n<               div className='ExamPage'>\r\n                  <AudioPlayer></AudioPlayer>\r\n                  <ChooseSection testid = {testid} testname={testname} testskill ={testskill}></ChooseSection>\r\n                  <TestSubmit testid = {testid} ></TestSubmit>\r\n              </div>\r\n      </Helmet>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport const ExamPageWriting = () => {\r\n  const testid = useLocation().state.id;\r\n  const testname = useLocation().state.testname\r\n  const testskill = useLocation().state.testskill\r\n  return (\r\n      <Helmet title=\"Trang chủ\">\r\n      <div className='ExamPage'>\r\n          <ChooseSection key={'test'+testid} testid = {testid} testname={testname} testskill ={testskill}></ChooseSection>\r\n      </div>\r\n      </Helmet>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const ExamPageSpeaking = () => {\r\n  const testid = useLocation().state.id;\r\n  const testname = useLocation().state.testname\r\n  const testskill = useLocation().state.testskill\r\n  return (\r\n      <Helmet title=\"Trang chủ\">\r\n            <div className='ExamPage'>\r\n                <ChooseSection testid = {testid} testname={testname} testskill ={testskill}></ChooseSection>\r\n            </div>\r\n      </Helmet>\r\n  );\r\n};\r\n\r\n\r\nexport default ExamPageReading","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\nconst history = useHistory();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`https://pawfectielts.onrender.com/api/login?username=${username}&password=${password}`, {method: 'POST'});\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Save relevant information to session storage\r\n        sessionStorage.setItem('userID', data.userID);\r\n        sessionStorage.setItem('role', data.role);\r\n        sessionStorage.setItem('name', data.name);\r\n        sessionStorage.setItem('phone', data.phone);\r\n\r\n        // Clear any previous error messages\r\n        setErrorMessage('');\r\n        history.push('/');\r\n      } else {\r\n        setErrorMessage('Login failed. Please check your credentials.');\r\n        alert('sai thong tin dang nhap')\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n      alert('sai thong tin dang nhap')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-form'>\r\n      <h2>Login Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        {errorMessage && <p>{errorMessage}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import Helmet from '../components/Layout/Helmet'\r\n\r\nimport React from \"react\";\r\nimport LoginForm from '../components/Authentication/LoginForm';\r\nconst LoginPage = (props) => {\r\n\r\n    return (\r\n        \r\n        <Helmet title=\"Đăng nhập\">\r\n            <LoginForm/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Alert } from 'bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst RegistrationForm = () => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('https://pawfectielts.onrender.com/user/register', user);\r\n\r\n      if (response.status >= 200 && response.status < 300) {\r\n        // Save relevant information to session storage\r\n        window.alert('Đăng kí thành công')\r\n        console.log(response.data);\r\n        console.error('OK response:', response.status, response.statusText);\r\n        history.push({\r\n          pathname: \"/\" \r\n        });\r\n      }\r\n      else{\r\n        window.alert('Đăng kí thất bại')\r\n        console.log(response.data);\r\n        console.error('Non-OK response:', response.status, response.statusText);\r\n      }\r\n\r\n      // Reset the form after successful registration\r\n      setUser({\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n      });\r\n    } catch (error) {\r\n      alert(error.response.data)\r\n      console.error('Error registering user:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prevUser) => ({ ...prevUser, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className='register-form'>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-5\">\r\n            <div className=\"card\">\r\n              <h2 className=\"card-title text-center\">Register</h2>\r\n              <div className=\"card-body py-md-4\">\r\n                <form _lpchecked=\"1\" onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" value={user.name} onChange={handleChange} placeholder=\"Name\"/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" value={user.email} onChange={handleChange}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"phone\" className=\"form-control\" name=\"phone\" id=\"phone\" placeholder=\"Phone\"  value={user.phone} onChange={handleChange}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\" value={user.username} onChange={handleChange} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" value={user.password} placeholder=\"Password\" onChange={handleChange}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" name=\"confirm-password\" id=\"confirm-password\" placeholder=\"Confirm password\"/>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row align-items-center justify-content-between\">\r\n                    <button className=\"btn btn-primary\" type='submit'>Create Account</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import Helmet from '../components/Layout/Helmet'\r\n\r\nimport React from \"react\";\r\nimport RegistrationForm from '../components/Authentication/RegistrationForm';\r\nconst RegisterPage = (props) => {\r\n\r\n    return (\r\n        \r\n        <Helmet title=\"Đăng nhập\">\r\n            <RegistrationForm/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nfunction ParagraphComponent( props) {\r\n    if (!props.paragraph) {\r\n        return null; // Handle case where paragraph prop is not provided\r\n      }\r\n    \r\n      const lines = props.paragraph.split(\"\\n\");\r\n      const html = lines.map((line, index) => (\r\n        <React.Fragment key={index}>\r\n          {line}\r\n          <br />\r\n        </React.Fragment>\r\n      ));\r\n    \r\n      return <div>{html}</div>;\r\n    }\r\n  \r\n  export default ParagraphComponent;","import React, {useEffect, useState } from 'react';\r\n\r\nimport { AiFillCheckCircle } from 'react-icons/ai'\r\nimport { FaTimesCircle } from 'react-icons/fa'\r\nimport { RiForbid2Fill } from 'react-icons/ri'\r\nimport ParagraphComponent from '../Utils/ParagraphComponent';\r\n\r\n\r\nconst TestResult = (props) => {\r\n  const [score, setScore] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n        fetch('https://pawfectielts.onrender.com/result/get/'+ props.testResultId, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setScore(data);\r\n          console.log(data);\r\n          console.log(props.testResultId)\r\n        })\r\n        .catch(error => {\r\n          console.error('Fetch error:', error);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n   }, [props.testResultId]);\r\n\r\n  return (\r\n    <div className='TestResult-container'>\r\n      <div className='TestResult'>\r\n        <div className='col-12 col-md-3 result'>\r\n          <div class=\"result-stats-item\">\r\n            <span class=\"result-stats-label\">Kết quả làm bài</span>\r\n            <span class=\"result-stats-text\">{score.rightAnswer}/40</span>\r\n          </div>\r\n          <div class=\"result-stats-item\">\r\n            <span class=\"result-stats-label\">Độ chính xác</span>\r\n            <span class=\"result-stats-text\">0.0%</span>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='col-12 col-md-9'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n                <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext right\">Trả lời đúng</div>\r\n                <div class=\"result-score-text\">{score.rightAnswer}</div>\r\n                <div class=\"result-score-sub\"><span>câu hỏi</span></div>\r\n              </div>\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n                <FaTimesCircle />\r\n                <div class=\"result-score-icontext wrong\">Trả lời sai</div>\r\n                <div class=\"result-score-text\">{score.wrongAnswer}</div>\r\n                <div class=\"result-score-sub\"><span>câu hỏi</span></div>\r\n              </div>\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n                <RiForbid2Fill />\r\n                <div class=\"result-score-icontext skip\">Bỏ qua</div>\r\n                <div class=\"result-score-text\">{score.skipAnswer}</div>\r\n                <div class=\"result-score-sub\"><span>câu hỏi</span></div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n                <RiForbid2Fill />\r\n                <div class=\"result-score-icontext score\">Điểm số</div>\r\n                <div class=\"result-score-text text-score\">{score.score}</div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h3>Đáp án:</h3>\r\n      <div class=\"result-answers-list\">\r\n        {score.userAnswers && score.userAnswers.map((item) => (\r\n          <div class=\"result-answers-item\" key={item.orderNumber}>\r\n            <span class=\"question-number\">\r\n              <strong>{item.orderNumber}</strong>\r\n            </span>\r\n            <span>\r\n              <span class=\"text-answerkey\">{item.correctAnswer}</span>:\r\n              {item.answer !== \"\" ? (\r\n                <i class=\"mr-1\">  {item.answer}</i>\r\n              ):\r\n              (\r\n                <i class=\"mr-1\">  chưa trả lời</i>\r\n              )}\r\n               {item.correct === false ?(\r\n                <span class=\"text-wrong\"> X</span>\r\n              ):\r\n              (\r\n                <span class=\"text-correct\"> J</span>\r\n              )}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestResult\r\n\r\nexport const TestResultPassage = (props) => {\r\n  const [score, setScore] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n        fetch('https://pawfectielts.onrender.com/result/getPassageResult/'+ props.testResultId)\r\n        // fetch('http://localhost:8888/result/getPassageResult/520')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setScore(data.listScore);\r\n          console.log(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Fetch error:', error);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n   }, [props.testResultId]);\r\n\r\n  return (\r\n    <div className='TestResult-container'>\r\n      {score && score.map((individualScore, index) => (\r\n        <>\r\n                <h1 className='m-5'>Task {index+1}</h1>\r\n\r\n      <div className='TestResult'>\r\n        <div className='row'>\r\n        <div className='col-12 col-md-12'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n                <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext right\">Task Response</div>\r\n                {score &&  \r\n                  <div class=\"result-score-text\">{individualScore.scoreTaskResponse}</div>\r\n                }\r\n\r\n  \r\n              </div>\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n              <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext wrong\">Coherence & Cohesion</div>\r\n                <div class=\"result-score-text\">{individualScore.scoreCoherence}</div>\r\n              </div>\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n              <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext skip\">Lexical Resource</div>\r\n                <div class=\"result-score-text\">{individualScore.scoreLexical}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n              <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext score\">Grammatical Range and Accuracy</div>\r\n                <div class=\"result-score-text \">{individualScore.scoreGrammar}</div>\r\n              </div>\r\n            </div>\r\n            <div className='col'>\r\n              <div className='score_box'>\r\n              <AiFillCheckCircle />\r\n                <div class=\"result-score-icontext score\">Score</div>\r\n                <div class=\"result-score-text text-score\">{individualScore.overallScore}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n          <div className='col-12'>\r\n          <ParagraphComponent paragraph={individualScore.content}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Helmet from '../components/Layout/Helmet'\r\nimport React from \"react\";\r\n// import TestDetail from '../components/TestDetail';\r\nimport TestResult,{TestResultPassage} from '../components/Test/TestResult';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Result = (props) => {\r\n    const testResultId = useLocation().state.testResultId;\r\n    console.log(testResultId)\r\n    return (\r\n        <Helmet title=\"Kết quả\">\r\n            <TestResult testResultId ={testResultId}/>\r\n            <TestResultPassage testResultId ={testResultId}/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\nexport default Result\r\n\r\nexport const ResultPassage = (props) => {\r\n    const testResultId = useLocation().state.testResultId;\r\n    return (\r\n        <Helmet title=\"Kết quả\">\r\n            <TestResultPassage testResultId ={testResultId}/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Alert = ({ type, message }) => {\r\n  return (\r\n    <div className={`mt-5 w-50 m-auto alert alert-${type}` } role=\"alert\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;","import React, {useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Alert from '../Utils/Alert';\r\nconst ChangePasswordForm = () => {\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (alert) {\r\n      const timer = setTimeout(() => {\r\n        setAlert(null);\r\n      }, 3000); // Adjust the time interval (in milliseconds)\r\n      \r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [alert]);\r\n\r\n  const [requestPassword, setRequestPassword] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n  });\r\n\r\n  const userid = JSON.parse(sessionStorage.getItem('user')).id\r\n\r\n  const handleSubmit =  async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.put('https://pawfectielts.onrender.com/user/change-password/' + userid, requestPassword);\r\n      console.log(response.data);\r\n      setAlert({ type: 'success', message: 'Password changed successfully.' });\r\n      // Reset the form after successful registration\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n      setAlert({ type: 'danger', message: 'An error occurred while changing the password.' });\r\n    }\r\n  \r\n    setRequestPassword({\r\n      currentPassword: '',\r\n      newPassword: '',\r\n    })\r\n    // Perform the password change logic here, e.g. send a request to your backend API.\r\n\r\n    // Reset the form fields\r\n  };\r\n\r\n  return (\r\n    <div className='register-form'>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-5\">\r\n            <div className=\"card mb-5\">\r\n              <h2 className=\"card-title text-center\">Đổi mật khẩu</h2>\r\n              <div className=\"card-body py-md-4\">\r\n                <form _lpchecked=\"1\" onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                  <input\r\n                  className=\"form-control\"\r\n                      type=\"password\"\r\n                      id=\"currentPassword\"\r\n                      name='currentPassword'\r\n                      value={requestPassword.currentPassword}\r\n                      onChange={(e) => setRequestPassword({\r\n                                    ...requestPassword,\r\n                                    currentPassword: e.target.value,\r\n                                  })}\r\n                      required\r\n                      placeholder='Mật khẩu cũ'\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                        <input\r\n                        className=\"form-control\"\r\n                          type=\"password\"\r\n                          id=\"newPassword\"\r\n                          name='password'\r\n                          value={requestPassword.newPassword}\r\n                          onChange={(e) =>     setRequestPassword({\r\n                            ...requestPassword,\r\n                            newPassword: e.target.value,\r\n                          })}\r\n                          required\r\n                          placeholder='Mật khẩu mới'\r\n                        />\r\n                  </div>\r\n                  {/* <div className=\"form-group\">\r\n                         <input\r\n                         className=\"form-control\"\r\n                            type=\"password\"\r\n                            id=\"confirmPassword\"\r\n                            value={requestPassword.password}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                            placeholder='Nhập lại mật khẩu'\r\n                          />\r\n                  </div> */}\r\n\r\n                  <div className=\"d-flex flex-row align-items-center justify-content-between\">\r\n                    <button className=\"btn btn-primary\" type='submit'>Đổi mật khẩu</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alert && <Alert type={alert.type} message={alert.message} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nfunction TestResultCard(props) {\r\n  return (\r\n    <Link \r\n    to={{\r\n        pathname: \"/exam/result/\" + props.data.id,\r\n        state: {testResultId: props.data.id}\r\n    }}>\r\n        {/* <div className='test_result_card'>\r\n          <p>{props.order}</p>\r\n          <p>{props.data.testName}</p>\r\n          <p>Score: {props.data.score}</p>\r\n          <p>Right Answers: {props.data.rightAnswer}/40</p>\r\n          <p>{props.data.create_at}</p>\r\n        </div> */}\r\n         <article className=\"leaderboard__profile\">\r\n          {/* <img\r\n            src=\"https://randomuser.me/api/portraits/men/32.jpg\"\r\n            alt=\"Mark Zuckerberg\"\r\n            className=\"leaderboard__picture\"\r\n          /> */}\r\n          <span className=\"leaderboard__name\">{props.data.testName}</span>\r\n          <span className=\"leaderboard__value\">\r\n             {props.data.score} \r\n            <span>{props.data.rightAnswer}/4 </span>\r\n\r\n          </span>\r\n          <span>{props.data.create_at}</span>\r\n        </article>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default TestResultCard;\r\n","import React, { useEffect, useState } from 'react'\r\nimport ChangePasswordForm from './Layout/ChangePasswordForm';\r\nimport TestResultCard from './Utils/TestResultCard';\r\n\r\nconst Profile = (props) => {\r\n    const [username, setUsername] = useState([]);\r\n    const [email, setEmail] = useState([]);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [resultData, setResultData] = useState([]);\r\n\r\n\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n    const userid = user.id\r\n    const API_URL = 'https://pawfectielts.onrender.com/result/getall/' + userid;\r\n\r\n    useEffect(() => {\r\n        setUsername(user.name);\r\n        setEmail(user.email);\r\n    }, [sessionStorage.getItem('user')]);\r\n\r\n\r\n    useEffect(async () => {\r\n        await fetch(API_URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setResultData(data);\r\n                console.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Fetch error:', error);\r\n            });\r\n    }, [API_URL]);\r\n    // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n    return (\r\n        <>\r\n            <div className='profile'>\r\n                <div className='profile_cover'>\r\n                </div>\r\n\r\n                <div className='profile_avatar'>\r\n                    <img src=\"./banner-2.png\" alt=\"\" />\r\n                </div>\r\n\r\n                <div className='profile_name'>{username}</div>\r\n                <div className='profile_bio'>{email}</div>\r\n                {/* <div className='profile_bio'>The best things come from living outside of your comfort zone</div> */}\r\n                <div>\r\n                    <div className='change-password-btn'>\r\n                        <button onClick={() => setShowForm(!showForm)}>\r\n                            {/* {showForm ? 'Hide Form' : 'Show Form'} */}\r\n                            Đổi mật khẩu\r\n                        </button>\r\n                    </div>\r\n                    {showForm && <ChangePasswordForm />}\r\n                </div>\r\n                <div className=\"leaderboard mt-5\">\r\n                    <header>\r\n                        <svg\r\n                            version=\"1.1\"\r\n                            id=\"Layer_1\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                            x=\"0px\"\r\n                            y=\"0px\"\r\n                            viewBox=\"0 0 511.999 511.999\"\r\n                            style={{ enableBackground: 'new 0 0 511.999 511.999' }}\r\n                            className=\"leaderboard__icon\"\r\n                        >\r\n                            {/* Add the SVG path here */}\r\n                        </svg>\r\n                        <h1 className=\"leaderboard__title\">\r\n                            <span className=\"leaderboard__title--top\">Lịch sử làm bài</span>\r\n                            <span className=\"leaderboard__title--bottom\">Chọn bài làm để xem chi tiết</span>\r\n                        </h1>\r\n                    </header>\r\n\r\n                    <main className=\"leaderboard__profiles\">\r\n                        {resultData.slice(0, 6).map((result, index) => (\r\n                            <TestResultCard data={result} order={index + 1} />\r\n                        ))}\r\n                    </main>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n\r\n","import React from 'react'\r\nimport Profile from '../components/Profile'\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Profile/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AddSet({ onSetAdded }) {\r\n  const [setName, setSetName] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setSetName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('https://pawfectielts.onrender.com/admin/addset', {\r\n        name: setName,\r\n      });\r\n      // Handle success or show a message to the user\r\n      console.log('Set added successfully:', response.data);\r\n      // Clear the input field after submission\r\n      setSetName('');\r\n\r\n      // Trigger the callback function to notify the parent component\r\n      onSetAdded();\r\n    } catch (error) {\r\n      // Handle error or show an error message to the user\r\n      console.error('Error adding set:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='addSet'>\r\n      <h2>Add a New Set</h2>\r\n      <label htmlFor=\"setName\">Set Name: </label>\r\n      <form className='d-flex justify-content-around' onSubmit={handleSubmit}>\r\n        <div className='w-50'>\r\n          <input\r\n            type=\"text\"\r\n            id=\"setName\"\r\n            value={setName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className='m-2 addsetbtn'>\r\n          <button type=\"submit\">Thêm Set mới</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddSet;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AddSet from './AddSet';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListAllSet = (props) => {\r\n  const API_URL = 'https://pawfectielts.onrender.com/admin/set/getall';\r\n  const [setList, setSetList] = useState([]);\r\n  const [urlSet, setUrl] = useState(API_URL);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [urlSet]);\r\n\r\n  const fetchData = () => {\r\n    fetch(urlSet, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // ... other headers if needed\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSetList(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Fetch error:', error);\r\n      });\r\n  };\r\n\r\n  const handleSetAdded = () => {\r\n    // Trigger a re-fetch of the data after a new set is added\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <div className='pt-5'>\r\n    <h1 className='admin-title'>Admin </h1>\r\n    <div className='setTable'>\r\n    <ol className=\"olcards\">\r\n      {setList.map((item, index) => (\r\n            <Link\r\n            to={{\r\n              pathname: '/admin/set/',\r\n              state: { stateParam: item },\r\n            }}\r\n            className=\"set-name\"\r\n          >\r\n        <li key={index} style={{ '--cardColor': '#36aeb3' }}>\r\n          <div className=\"content\">\r\n            <div className=\"icon\">😁</div>\r\n            {/* <div className=\"title\">{set.id}</div> */}\r\n            <div className=\"text\">{item.name}</div>\r\n          </div>\r\n        </li>\r\n        </Link>\r\n      ))}\r\n    </ol> \r\n    </div>\r\n    <AddSet onSetAdded={handleSetAdded} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAllSet;\r\n","import Helmet from '../components/Layout/Helmet'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ListAllSet from '../components/Admin/ListAllSet';\r\n\r\nconst AdminDashboard = () => {\r\n    const [LoginStatusAdmin, setLoginStatusAdmin] = useState(false);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const user = JSON.parse(sessionStorage.getItem('user'))\r\n        if(user && user.role == \"ADMIN\"){\r\n            setLoginStatusAdmin(true)\r\n        }\r\n    //   if (loading) return;\r\n    //   if (!user) return history.push('/');\r\n    //   fetchUser();\r\n    }, [sessionStorage.getItem('user')]);\r\n\r\n    const renderContent = () => {\r\n        if (LoginStatusAdmin) {\r\n            return (\r\n                <>\r\n                    <ListAllSet></ListAllSet>\r\n                </>\r\n            );\r\n        } else {\r\n            return <h1 className='text-danger m-5'>Bạn không có quyền truy cập trang này</h1>;\r\n        }\r\n    };\r\n    return (\r\n        <Helmet title=\"Trang Admin\">{renderContent()}</Helmet>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","import React, {useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nconst AddTestCard = ( props ) => {\r\n  const [skill, setSkill] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect( () =>{\r\n    getSkill();\r\n  },[props.skill])\r\n\r\n  const getSkill = async () => {\r\n        try {\r\n          const response = await fetch('https://pawfectielts.onrender.com/skill/getskill/' + props.skill, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n  \r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }else{\r\n            const skill = await response.json()\r\n            setSkill(skill)\r\n          }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n\r\n  const navigatePage =() =>{\r\n        history.push({\r\n          pathname: \"/addtest/\"+ skill.name + '/' +props.setid,\r\n          state: {\r\n              test: props.test,\r\n              setid: props.setid,\r\n              skillid: skill.id,\r\n          }\r\n        });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <div className='add-test-card'>\r\n          <div className='add-test-card_img' onClick={navigatePage}>\r\n            <img src=\"https://www.computerhope.com/jargon/p/plus.png\" alt=\"\" />\r\n            <p>Thêm bài test {skill.name}</p>\r\n          </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTestCard;\r\n\r\n\r\nexport const TestCardAdmin = ( props ) => {\r\n\r\n\r\n   const deleteTest = async () => {\r\n    try {\r\n      const response = await fetch('https://pawfectielts.onrender.com/admin/delete/' + props.testid, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }else{\r\n        props.hideTestCardAdmin()\r\n      }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className='test-card-admin'>\r\n            <h3>{props.test.name}</h3>\r\n            <div className='m-5'>\r\n              <button onClick={deleteTest}>\r\n                <div className='delete-test'>\r\n                  <img src=\"https://icon-library.com/images/small-trash-can-icon/small-trash-can-icon-19.jpg\" alt=\"\" />\r\n                  <h4>Xóa test</h4>\r\n                </div>\r\n              </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TestCard } from \"../Test/ListTestCard\";\r\nimport AddTestCard from \"./AddTestCard\";\r\nimport { TestCardAdmin } from \"./AddTestCard\";\r\n\r\nconst SetDetail = (props) => {\r\n    const API_URL = 'http://localhost:8888/test/getbyset/' + props.setid;\r\n    const [testData, setData] = useState([]);\r\n    const [urlSet, setUrl] = useState(API_URL);\r\n    const [showTestCardAdmin, setShowTestCardAdmin] = useState(true);\r\n\r\n    const hideTestCardAdmin = () => {\r\n      setShowTestCardAdmin(false);\r\n  };\r\n  \r\n    useEffect(() => {\r\n        fetch(urlSet, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // ... other headers if needed\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setData(data);\r\n            console.log(data);\r\n        })\r\n        .catch(error => {\r\n            console.error('Fetch error:', error);\r\n        });\r\n    }, [urlSet, showTestCardAdmin]); \r\n     // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n    const desiredSkillIds = [1, 2, 3, 4];\r\n\r\n    return (\r\n        <div className=\"list-test-card\">\r\n        {desiredSkillIds.map(desiredId => (\r\n          testData.some(item => item.skill.id === desiredId) ? (\r\n            testData.map(item => (\r\n              item.skill.id === desiredId ? (\r\n                <TestCardAdmin \r\n                  key={item.id}\r\n                  test={item} \r\n                  testid={item.id} \r\n                  setid={props.setid} \r\n                  skill={desiredId} \r\n                  hideTestCardAdmin={hideTestCardAdmin} \r\n                  />\r\n              ) : null\r\n            ))\r\n          ) : (\r\n            <AddTestCard key={desiredId} setid={props.setid} skill={desiredId}></AddTestCard>\r\n          )\r\n        ))}\r\n      </div>\r\n    )\r\n}\r\nexport default SetDetail","import Helmet from '../components/Layout/Helmet'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport SetDetail from '../components/Admin/SetDetail';\r\n\r\nconst AdminSetDetail = () => {\r\n    const setItem = useLocation().state.stateParam;\r\n    console.log(setItem.id)\r\n    return (\r\n\r\n        <Helmet title=\"Trang admin\">\r\n            <SetDetail setid={setItem.id}/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminSetDetail\r\n","import React, { useState } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst CKEditorComponent = ({editorValue, onHtmlChange, ...props }) => {\r\n  const [editorData, setEditorData] = useState('');\r\n\r\n  const handleEditorChange = (event, editor) => {\r\n    const data = editor.getData();\r\n    setEditorData(data);\r\n    console.log(data)\r\n    if (onHtmlChange) {\r\n      onHtmlChange(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className={props.class}>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        data={editorData}\r\n        onChange={handleEditorChange}\r\n        value = {editorValue}\r\n      />\r\n      \r\n    </div>\r\n    {/* <div>{editorData}</div> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default CKEditorComponent;\r\n","import React, { useState } from 'react';\r\n\r\nconst AddQuestion = ({ listquestion }) => {\r\n  const [inputTags, setInputTags] = useState(['']);\r\n  const [inputTagsAnswer, setInputTagsAnswer] = useState(['']);\r\n  const [outputTags, setOutputTags] = useState(['']);\r\n\r\n  const handleAddInput = () => {\r\n    setInputTags([...inputTags, '']);\r\n    setInputTagsAnswer([...inputTagsAnswer, '']);\r\n    setOutputTags([...outputTags, { name: '', correctAnswer: '', child: [] }]);\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const updatedInputTags = [...inputTags];\r\n    updatedInputTags[index] = value;\r\n    setInputTags(updatedInputTags);\r\n  \r\n    const updatedOutputTags = outputTags.map((item, idx) => {\r\n      if (idx === index) {\r\n        return {\r\n          ...item,\r\n          name: value,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n    \r\n    console.log(updatedOutputTags)\r\n\r\n    setOutputTags(updatedOutputTags);\r\n  \r\n    if (listquestion) {\r\n      listquestion(updatedOutputTags);\r\n    }\r\n  };\r\n  \r\n  const handleInputAnswerChange = (index, value) => {\r\n    const updatedInputTagsAnswer = [...inputTagsAnswer];\r\n    updatedInputTagsAnswer[index] = value;\r\n    setInputTagsAnswer(updatedInputTagsAnswer);\r\n  \r\n    const updatedOutputTags = outputTags.map((item, idx) => {\r\n      if (idx === index) {\r\n        return {\r\n          ...item,\r\n          correctAnswer: value,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n    console.log(value)\r\n    console.log(updatedOutputTags)\r\n  \r\n    setOutputTags(updatedOutputTags);\r\n  \r\n    if (listquestion) {\r\n      listquestion(updatedOutputTags);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleRemoveInput = (index) => {\r\n    const updatedInputTags = inputTags.filter((tag, i) => i !== index);\r\n    setInputTags(updatedInputTags);\r\n    const updatedInputTagsAnswer = inputTagsAnswer.filter((tag, i) => i !== index);\r\n    setInputTagsAnswer(updatedInputTagsAnswer);\r\n    const updatedOutputTags = [...outputTags];\r\n    updatedOutputTags.splice(index, 1);\r\n    setOutputTags(updatedOutputTags);\r\n    if (listquestion) {\r\n      listquestion(updatedOutputTags);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {inputTags.map((tag, index) => (\r\n        <div className='new_question_input' key={index}>\r\n          <h4>Câu hỏi</h4>\r\n          <textarea\r\n            type=\"text\"\r\n            value={inputTags[index]}\r\n            onChange={(e) => handleInputChange(index, e.target.value)}\r\n          />\r\n          <h4>Đáp án</h4>\r\n          <textarea\r\n            type=\"text\"\r\n            value={inputTagsAnswer[index]}\r\n            onChange={(e) => handleInputAnswerChange(index, e.target.value)}\r\n          />\r\n\r\n          <button onClick={() => handleRemoveInput(index)}>Xóa</button>\r\n        </div>\r\n      ))}\r\n      <button className='add_input_child' onClick={handleAddInput}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React, { useState } from 'react';\r\nimport CKEditorComponent from './CKEditorComponent';\r\nimport AddQuestion from './AddQuestion';\r\n\r\nconst InputQuestion = ({listoutput}) => {\r\n    const [inputTags, setInputTags] = useState(['']);\r\n    // const [selectedOption, setSelectedOption] = useState('');\r\n    const [listTopic, setListTopic] = useState([''])\r\n    const [listQuestions , setListQuestions] = useState([])\r\n    const [outputTags, setOutputTags] = useState([]);\r\n\r\n    const handleAddInput = () => {\r\n      // setInputTags([...inputTags, '']);\r\n      setListQuestions([...listQuestions, '']);\r\n      setListTopic([...listTopic, '']);\r\n      setOutputTags([...outputTags, { order:'', title: '', questionDetails: []}]);\r\n    };\r\n  \r\n    const handleRemoveInput = (index) => {\r\n      const updatedInputTags = inputTags.filter((tag, i) => i !== index);\r\n      setInputTags(updatedInputTags);\r\n    };\r\n\r\n// //select \r\n//     const handleSelectChange = (event) => {\r\n//       setSelectedOption(event.target.value);\r\n//     };\r\n//   //\r\n\r\n// CK editor\r\n    const handleEditorSelectChange = (index, newEditorValue) => {\r\n      const updatedTopicList = [...listTopic];\r\n      updatedTopicList[index] = newEditorValue;\r\n      setListTopic(updatedTopicList);\r\n    \r\n      const updatedOutputTags = outputTags.map((item, idx) => {\r\n        if (idx === index) {\r\n          return {\r\n            ...item,\r\n            title: newEditorValue,\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      setOutputTags(updatedOutputTags);\r\n      if (listoutput) {\r\n        listoutput(updatedOutputTags);\r\n      }\r\n    };\r\n\r\n    const handleListQuestionSelectChange = (index, questionDetails) => {\r\n      const updatedListQuestions = [...listQuestions];\r\n      updatedListQuestions[index] = questionDetails;\r\n      setListQuestions(updatedListQuestions);\r\n\r\n      \r\n      const updatedOutputTags = outputTags.map((item, idx) => {\r\n        if (idx === index) {\r\n          return {\r\n            ...item,\r\n            questionDetails: questionDetails,\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      setOutputTags(updatedOutputTags);\r\n      if (listoutput) {\r\n        listoutput(updatedOutputTags);\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        {listQuestions.map((tag, index) => (\r\n          <div className='new_question' key={index}>\r\n              <button className='remove_btn' onClick={() => handleRemoveInput(index)}>x</button>\r\n            {/* <SelectComponent key={'select'+index} selectedValue={selectedOption} onSelectedChange={handleSelectChange} /> */}\r\n            <CKEditorComponent key={'ckeditor'+ index} onHtmlChange={(questionDetails) =>handleEditorSelectChange(index, questionDetails)}  class=\"ckeditor\"/>\r\n            <AddQuestion key={'addquestion'+index}  listquestion={(listq) =>handleListQuestionSelectChange(index, listq)}/>\r\n          </div>\r\n        ))}\r\n\r\n        <button className='add_input_question' onClick={handleAddInput}>+ Thêm section mới</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default InputQuestion;","import React, { useState } from 'react';\r\n\r\nconst FileInputComponent = ({onChange} ) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n    onChange(file); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      {selectedFile && (\r\n        <div>\r\n          <p>Selected file: {selectedFile.name}</p>\r\n          <p>File size: {selectedFile.size} bytes</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileInputComponent;","\r\nimport React, { useEffect, useState } from \"react\";\r\n// import TestCard from '../components/TestCard';\r\nimport CKEditorComponent from './CKEditorComponent';\r\nimport InputQuestion from './InputQuestion';\r\nimport FileInputComponent from \"./FileInputComponent\";\r\nconst TestEditor = ({ output, ...props }) => {\r\n    const [listQuestions, setlistQuestions] = useState([])\r\n    const [partContent, setPartContent] = useState({\r\n        topic: {\r\n            \"topicId\": 1,\r\n            \"name\": \"History and Culture\"\r\n        },\r\n        order: props.order,\r\n    });\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [test, setTest] = useState({\r\n        part: {},\r\n        listQuestion: [],\r\n        setid: 3,\r\n        skillid: 2\r\n    })\r\n\r\n    const handleListQuestionSelectChange = (listoutput) => {\r\n        setlistQuestions(listoutput);\r\n        // console.log(listQuestions);\r\n        setTest({\r\n            ...test,\r\n            listQuestion: listoutput,\r\n        })\r\n        saveOutput({\r\n            ...test,\r\n            listQuestion: listoutput,\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (file) => {\r\n        const updatedPartContent = {\r\n            ...partContent,\r\n            audioFile: file,\r\n        };\r\n\r\n        setAudioFile(file)\r\n        setPartContent(updatedPartContent);\r\n        setTest({\r\n            ...test,\r\n            part: updatedPartContent,\r\n        })\r\n        saveOutput({\r\n            ...test,\r\n            part: updatedPartContent,\r\n        });\r\n    };\r\n\r\n    const handleEditorSelectChange = (newEditorValue) => {\r\n        const updatedPartContent = {\r\n            ...partContent,\r\n            content: newEditorValue,\r\n        };\r\n        setPartContent(updatedPartContent);\r\n        setTest({\r\n            ...test,\r\n            part: updatedPartContent,\r\n        })\r\n        saveOutput({\r\n            ...test,\r\n            part: updatedPartContent,\r\n        });\r\n    };\r\n\r\n    const saveOutput = (newTest) => {\r\n        if (output) {\r\n            output(newTest);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* <PartSelector onSelect={handlePartOrderSChange}/> */}\r\n            <h1>Part {props.order}</h1>\r\n            <div className='admin'>\r\n                <div className='add_topic'>\r\n                    <CKEditorComponent editorValue={test.content} onHtmlChange={handleEditorSelectChange}  class=\"ck_passage\"/>\r\n                    {props.skillid == 1 &&\r\n                        <FileInputComponent onChange={handleFileChange}/>\r\n                    }\r\n                </div>\r\n\r\n                    {(props.skillid == 1 || props.skillid == 2) &&\r\n                        <div className='add_question'>\r\n                            <InputQuestion listoutput={handleListQuestionSelectChange} />\r\n                        </div>\r\n                    }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default TestEditor\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst AddTest = ({ onInputChange }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = event => {\r\n    const newValue = event.target.value;\r\n    setInputValue(newValue);\r\n\r\n    if (onInputChange) {\r\n      onInputChange(newValue); // Call the callback with the new value\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='add_test_name'>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Nhập tên của bài test\"\r\n        required\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTest;\r\n\r\n","import Helmet from '../components/Layout/Helmet'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TestEditor, {TestEditorWritingOrSpeaking} from '../components/Admin/TestEditor';\r\nimport AddTest from '../components/Admin/AddTest';\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst AdminEditPageReading = (props) => {\r\n    const setid = useLocation().state.setid;\r\n    const skillid = useLocation().state.skillid;\r\n    const [listTest, setListTest] = useState(['']);\r\n    const [inputTags, setInputTags] = useState(['']);\r\n    const [testName, setTestName] = useState('');\r\n    const getListTest = (index, output) => {\r\n        const updatedListTest = [...listTest];\r\n        updatedListTest[index] = output;\r\n        setListTest(updatedListTest);\r\n        console.log(updatedListTest)\r\n    };\r\n\r\n    const handleNameChange = (onInputChange) => {\r\n        setTestName(onInputChange);\r\n    };\r\n\r\n    const handleAddInput = () => {\r\n        setInputTags([...inputTags, '']);\r\n      };\r\n\r\n    const handleRemoveInput = (index) => {\r\n        const updatedInputTags = inputTags.filter((tag, i) => i !== index);\r\n        setInputTags(updatedInputTags);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log({\r\n            testName: testName,\r\n            listTest: listTest,\r\n            setid: setid,\r\n            skillid: skillid,\r\n        });\r\n    }, [testName, listTest]);\r\n\r\n\r\n    const submitDataToApi = () => {\r\n        const isSubmit = window.confirm(\"Bạn có chắc chắn muốn lưu bài test\")\r\n        if(isSubmit){\r\n            axios.post('https://pawfectielts.onrender.com/admin/addtest', {\r\n                testName: testName,\r\n                listTest: listTest,\r\n                setid: setid,\r\n                skillid: skillid,\r\n            })\r\n            .then(response => {\r\n                // Handle success, e.g., show a success message\r\n\r\n                console.log('API request successful', response.data);\r\n            })\r\n            .catch(error => {\r\n                // Handle error, e.g., show an error message\r\n                console.error('API request error', error);\r\n            });\r\n        };\r\n    }   \r\n\r\n\r\n    return (\r\n\r\n        <Helmet title=\"Trang admin\">\r\n            <div className='admin_page'>\r\n                <AddTest onInputChange={handleNameChange} />\r\n                {inputTags.map((tag, index) => (\r\n                    <div key={'section'+index} className='edit_section'>\r\n                        <button className='remove_btn' onClick={() => handleRemoveInput(index)}>Xóa Part</button>\r\n                        <TestEditor key={'testeditor'+index} order={index+1} output={(TestQ) =>getListTest(index, TestQ)} setid = {setid} skillid={skillid} />\r\n                    </div>      \r\n                ))}   \r\n                <div className='add_input_part'><button onClick={handleAddInput}>Thêm part mới</button></div>\r\n                <div className='save_btn'><button onClick={submitDataToApi}>Lưu bài test</button></div> \r\n           </div>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\nexport default AdminEditPageReading\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const TestAnswer = (props) => {\r\n\r\n    const API_URL = 'https://pawfectielts.onrender.com/answer/get/' + props.testid ;\r\n    const [Answer, setAnswer] = useState([]);\r\n    const [urlSet, setUrl] = useState(API_URL);\r\n\r\n    useEffect(async () => {\r\n         await fetch(urlSet, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setAnswer(data);\r\n            console.log(data);\r\n        })\r\n        .catch(error => {\r\n            console.error('Fetch error:', error);\r\n        });\r\n    }, [urlSet]);  // Include urlSet as a dependency to ensure useEffect is triggered when it changes\r\n\r\n    return (\r\n    \r\n         <div className='container m-3'>\r\n         <h3>Đáp án:</h3>\r\n            <div class=\"result-answers-list\">\r\n                {Answer && Answer.map((item) => (\r\n                <div class=\"result-answers-item\" key={item.order}>\r\n                    <span class=\"question-number\">\r\n                    <strong>{item.order}</strong>\r\n                    </span>\r\n                    <span class=\"text-answerkey\">{item.correctAnswer}</span>\r\n                </div>\r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestAnswer;\r\n\r\n","import Helmet from '../components/Layout/Helmet'\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport TestDetail from '../components/Test/TestDetail';\r\nimport { useLocation } from 'react-router-dom'\r\nimport TestAnswer from '../components/Test/TestAnswer';\r\n\r\n\r\nconst TestAnswerPage = (props) => {\r\n    const testid = useLocation().state.testid;\r\n    \r\n    return (\r\n        \r\n        <Helmet title=\"Trang chủ\">  \r\n            <TestAnswer testid={testid}/>\r\n        </Helmet>\r\n        \r\n    )\r\n}\r\n\r\nexport default TestAnswerPage\r\n","import React, {useEffect} from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Home from '../pages/Home'\nimport TestPage from '../pages/TestPage'\nimport ExamPageReading, {ExamPageListening, ExamPageWriting, ExamPageSpeaking}  from '../pages/ExamPage'\nimport LoginPage from '../pages/LoginPage'\nimport RegisterPage from '../pages/RegisterPage'\nimport Result,{ResultPassage} from '../pages/Result'\nimport ProfilePage from '../pages/ProfilePage'\nimport AdminDashboard from '../pages/AdminDashboard'\nimport AdminSetDetail from '../pages/AdminSetDetail'\nimport AdminEditPageReading, { AdminEditPageSpeaking, AdminEditPageWriting} from '../pages/AdminEditPage'\nimport TestAnswerPage from '../pages/TestAnswerPage'\nconst Routes = () => {\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    //   if (loading) return;\n    //   if (!user) return history.push('/');\n    //   fetchUser();\n    }, []);\n    return (\n        <Switch>\n            {/* Home */}\n            <Route path='/' exact component={Home}/>\n            <Route path='/home' exact component={Home}/>\n            <Route path='/test' exact component={TestPage}/>\n            <Route path='/exam/reading'  component={ExamPageReading}/>\n            <Route path='/exam/writing'  component={ExamPageWriting}/>\n            <Route path='/exam/listening'  component={ExamPageListening}/>\n            <Route path='/exam/speaking'  component={ExamPageSpeaking}/>\n            <Route path='/exam/result'  component={Result}/>\n            <Route path='/exam/resultpassage'  component={ResultPassage}/>\n            <Route path='/login'  component={LoginPage}/>\n            <Route path='/register'  component={RegisterPage}/>\n            <Route path='/profile'  component={ProfilePage}/>\n            <Route path='/admin/set'  component={AdminSetDetail}/>\n            <Route path='/addtest/reading'  component={AdminEditPageReading}/>\n            <Route path='/addtest/listening'  component={AdminEditPageReading}/>\n            <Route path='/addtest/writing'  component={AdminEditPageReading}/>\n            <Route path='/addtest/speaking'  component={AdminEditPageReading}/>\n            <Route path='/admin/'  component={AdminDashboard}/>\n            <Route path='/answer/'  component={TestAnswerPage}/>\n            {/* <Route path='/admin'  component={AdminPage}/> */}\n\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoginPopup = ({ onClose, onLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const history = useHistory();\r\n\r\n\r\n  const handleLogin = async () => {\r\n    // Here you can add your authentication logic\r\n    // For simplicity, let's assume successful login and store the username in sessionStorage\r\n    try {\r\n        const response = await fetch(`https://pawfectielts.onrender.com/api/login?username=${username}&password=${password}`, {method: 'POST'});\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          // Save relevant information to session storage\r\n          onLogin(JSON.stringify(data));\r\n          onClose();\r\n          window.alert(\"Đăng nhập thành công\")\r\n          if(data.role == \"USER\")\r\n            history.push({pathname: \"/\" });\r\n          else if(data.role == \"ADMIN\")\r\n            history.push({pathname: \"/admin\" });\r\n        } else {\r\n          setErrorMessage('Login failed. Please check your credentials.');\r\n          window.alert('sai thong tin dang nhap')\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred:', error);\r\n        window.alert('Sai thông tin đăng nhập')\r\n      }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"popup bg-dark\">\r\n        <div className='m-3 close-button' onClick={onClose}>X</div>\r\n        <h2 className='text-warning'>Login</h2>\r\n        <input\r\n          className='m-1 p-2'\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={async(e) => await setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          className='m-1 p-2'\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={async(e) => await setPassword(e.target.value)}\r\n        />\r\n        <button type='submit' onSubmit={handleLogin} onClick = {handleLogin}className='m-3 text-warning'>Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default LoginPopup;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LogoutPopup = ({ onClose, onLogout }) => {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await fetch(`https://pawfectielts.onrender.com/user/logout`, {method: 'POST'});\r\n\r\n      if (response.ok) {\r\n        // Save relevant information to session storage\r\n        onLogout();\r\n        onClose();\r\n        sessionStorage.removeItem('user');\r\n        window.alert(\"Đăng xuất thành công\")\r\n        history.push({\r\n          pathname: \"/home\" \r\n        });\r\n      } else {\r\n        window.alert(\"Đăng xuất thất bại\")\r\n      }\r\n    } catch (error) {\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"overlay \">\r\n      <div className=\"popup bg-light\">\r\n        <button className='m-2 close-button' onClick={onClose}>X</button>\r\n        <h2 className='text-success'>Logout</h2>\r\n        <p className='text-warning'>Are you sure you want to logout?</p>\r\n        <button className='mr-2 text-danger'onClick={handleLogout}>Logout</button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutPopup;\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = ({ history }) => {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Routes from '../../routes/Routes'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBacteria } from '@fortawesome/free-solid-svg-icons'\nimport LoginPopup from './LoginPopup';\nimport LogoutPopup from './LogoutPopup';\nimport { Link, useHistory } from 'react-router-dom'\nimport ScrollToTop from '../Utils/ScrollToTop';\n\nconst Layout = () => {\n\n  return (\n    <BrowserRouter>\n          <ScrollToTop />\n      <Route render={props => (\n        <div>\n          <Header />\n          <div className=\"\">\n            <div className=\"main\">\n              <Routes />\n            </div>\n          </div>\n          <FooterWrapper />\n        </div>\n      )} />\n    </BrowserRouter>\n  )\n}\n\nexport default Layout\n\nexport const Header = (props) => {\n  const [user, setUser] = useState();\n  const [showLoginPopup, setShowLoginPopup] = useState(false);\n  const [showLogoutPopup, setShowLogoutPopup] = useState(false);\n  const history = useHistory();\n  const handleLogin = (user) => {\n    sessionStorage.setItem('user', user);\n  };\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('user');\n    setUser('');\n  };\n\n  useEffect( () => {\n    const user = sessionStorage.getItem('user');\n    setUser(JSON.parse(user));\n  }, [sessionStorage.getItem('user')]); \n\n  return (\n    <div className='header'>\n      <div className='header_logo'>\n        <Link to={{\n          pathname: \"/\",\n        }} className='LinkWithoutUnderline d-flex'>\n          {/* <a><img src=\"../cute-logo.png\" alt=\"\" /></a> */}\n          <div>PawfectIELTS </div>\n        </Link>\n      </div>\n      <div className='header_menu'>\n        <a><div>Làm đề thi</div></a>\n        <a><div>Tài liệu</div></a>\n        <a><div>Giới thiệu</div></a>\n        <a><div>Liên lạc</div></a>\n      </div>\n\n      <div className=\"header_user \">\n        {user ? (\n          <>\n            <Link to=\"/profile\" className=\"LinkWithoutUnderline d-flex\">\n              <div>{user.name}</div>\n            </Link>\n            <button onClick={() => setShowLogoutPopup(true)}>logout</button>\n          </>\n        ) : (\n          <div className='d-flex'>\n            <button className=' m-2' onClick={() => setShowLoginPopup(true)}>Login</button>\n            <Link to=\"/register\" className=\"LinkWithoutUnderline d-flex\">\n              <button className='m-2'>Register</button>\n            </Link>\n          </div>\n        )}\n\n      </div>\n      {showLoginPopup && (\n        <LoginPopup\n          onClose={() => setShowLoginPopup(false)}\n          onLogin={handleLogin}\n        />\n      )}\n      {showLogoutPopup && (\n        <LogoutPopup\n          onClose={() => setShowLogoutPopup(false)}\n          onLogout={handleLogout}\n        />\n      )}\n\n    </div>\n  )\n}\n\nconst Footer = () => {\n  return (\n    <>\n      <div className=\"fb-like mb-2\">\n        {/* Facebook Like button */}\n        {/* Place your Facebook Like button code here */}\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md grow0\">\n          <a href=\"/\"><img className=\"mb-2\" src=\"/static/img/logo_full_sm.png\" alt=\"\" height=\"30\" /></a>\n          <div className=\"site-socials\">\n            {/* Social media links */}\n            <a target=\"_blank\" href=\"https://facebook.com/study4.official\"> <FontAwesomeIcon icon={faBacteria} /> </a>\n            <a target=\"_blank\" href=\"https://instagram.com/study4.official\"> <FontAwesomeIcon icon={faBacteria} /></a>\n            <a target=\"_blank\" href=\"https://twitter.com/study4Official\"> <FontAwesomeIcon icon={faBacteria} /></a>\n            <a target=\"_blank\" href=\"https://www.linkedin.com/company/study4\"> <FontAwesomeIcon icon={faBacteria} /></a>\n            <a target=\"_blank\" href=\"https://www.tiktok.com/@study4.official\"> <FontAwesomeIcon icon={faBacteria} /></a>\n          </div>\n        </div>\n        <div className=\"col-6 col-md\">\n          <div className=\"footer-title\">Tài nguyên</div>\n          <ul className=\"list-unstyled text-small\">\n            <li><a href=\"#\">Thư viện đề thi</a></li>\n            <li><a href=\"#\">Kho tài liệu</a></li>\n\n          </ul>\n        </div>\n        <div className=\"col-6 col-md\">\n          <div className=\"footer-title\">Hỗ trợ</div>\n          <ul className=\"list-unstyled text-small\">\n            <li><a href=\"#\">Hướng dẫn sử dụng</a></li>\n            <li><a href=\"#\">Chăm sóc khách hàng</a></li>\n          </ul>\n        </div>\n        <div className=\"col-6 col-md\">\n          <div className=\"footer-title\">PawfectIELTS</div>\n          <ul className=\"list-unstyled text-small\">\n            <li><a href=\"#\">Về chúng tôi</a></li>\n            <li><a href=\"#\">Liên hệ</a></li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer-addresses\">\n        <h5 id=\"địa-chỉ\">Địa chỉ</h5>\n        <ul>\n          <li>Trụ sở chính: 19 Nguyễn Hưu Thọ, Tân Phong, Thành Phố Hồ Chí Minh</li>\n        </ul>\n      </div>\n      <div className=\"footer-copyright text-center\">\n        @ 2023 Nguyen Pham Hong An \n      </div>\n    </>\n  );\n};\n\nexport const FooterWrapper = () => {\n  return (\n    <div className=\"footer-wrapper\">\n      <div className=\"footer-container\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './sass/index.scss'\nimport Layout from './components/Layout/Layout.jsx'\nReactDOM.render(\n  <React.StrictMode>\n    <Layout/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// const link = document.createElement('link');\n// link.rel = 'icon';\n// link.href = favicon;\n// document.head.appendChild(link);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}